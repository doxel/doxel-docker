#!/bin/bash
#
# doxel-atom.sh - Edit the doxel-loopback source code with atom
#
# Author(s):
#
#      Luc Deschenaux <luc.deschenaux@freesurf.ch>
#
# This file is part of the DOXEL project <http://doxel.org>.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Additional Terms:
#
#      You are required to preserve legal notices and author attributions in
#      that material or in the Appropriate Legal Notices displayed by works
#      containing it.
#
#      You are required to attribute the work as explained in the "Usage and
#      Attribution" section of <http://doxel.org/license>.
#/

usage() {
  cat << EOF
SYNOPSIS
      $(basename $0)

DESCRIPTION
      Edit the doxel-loopback source code with atom using the doxel-atom
      docker container.
      
EOF
  exit 1
}

case "$1" in 
  -h|--help) usage ;;
esac

NAME=doxel-atom

container() {
  docker ps $1 -q --no-trunc --filter name=^/$NAME$
}

#if [ -z "$(container)" ] ; then
#  STOPPED_CONTAINER="$(container -a)"
#  if [ -n "$STOPPED_CONTAINER" ] ; then
#    echo == Resume existing container
#    docker commit $STOPPED_CONTAINER atom:resume
#    docker rm $STOPPED_CONTAINER
#    docker run \
#      -it \
#      --name $NAME \
#      -v /tmp/.X11-unix/:/tmp/.X11-unix/ \
#      -v /dev/shm:/dev/shm \
#      -e DISPLAY \
#      --mount source=doxel-atom,destination=/home/atom \
#      --mount source=doxel-loopback,destination=/home/atom/src/doxel-loopback \
#      atom:resume \
#      bash -c -l "killall -0 atom || usr/bin/atom ; bash -l"
#    exit
#  fi
#fi

# when the doxel-atom volume exists, preferences will tell what to open
VOLUME=$(docker volume ls -q --filter name=^$NAME$)
if [ -n "$VOLUME" ] ; then
  CMD="/usr/bin/atom -f"
else
  # but the first time atom is launched, force open the project directory
  CMD="/usr/bin/atom -f /home/atom/src/doxel-loopback"
fi

echo === Running atom
docker run \
  --rm=true \
  -d \
  --name $NAME \
  -v /tmp/.X11-unix/:/tmp/.X11-unix/ \
  -v /dev/shm:/dev/shm \
  -e DISPLAY \
  --mount source=doxel-atom,destination=/home/atom \
  --mount source=doxel-loopback,destination=/home/atom/src/doxel-loopback \
  atom \
  $CMD

